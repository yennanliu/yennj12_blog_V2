name: Setup
on: push

jobs:
  setup:
    if: github.event.commits[0].message == 'Initial commit'
    runs-on: ubuntu-latest
    steps:

    - name: Verify this is a template commit
      uses: actions/github-script@0.5.0
      id: gh
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          async function numcommits(){
             // Get number of commits in the first pagination
             const commits = await github.repos.listCommits({
                                  owner: context.repo.owner,
                                  repo: context.repo.repo,
                                 })
             const n = commits.data.length
             // Evidence of a template commit is the first commit in a repo with the message 'Initial commit'
             const template_bool = (process.env.COMMIT_MSG == 'Initial commit') && (n == 1)
             // Emit output
             console.log(`::set-output name=template_bool::${template_bool}`)
          }
          numcommits()
      env:
         COMMIT_MSG: ${{ github.event.commits[0].message }}

    - name: Set up Python
      if: steps.gh.outputs.template_bool == 'true'
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Copy Repository Contents
      if: steps.gh.outputs.template_bool == 'true'
      uses: actions/checkout@v2
        
    - name: modify files
      if: steps.gh.outputs.template_bool == 'true'
      run: |
        import re, os
        from pathlib import Path

        nwo = os.getenv('GITHUB_REPOSITORY')
        username, repo_name = nwo.split('/')
        readme_template_path = Path('README_TEMPLATE.md')
        readme_path = Path('README.md')
        config_path = Path('_config.yml')
        pr_msg_path = Path('_setup_pr_template.md')

        assert readme_template_path.exists(), 'Did not find README_TEMPLATE.md in the current directory!'
        assert readme_path.exists(), 'Did not find README.md in the current directory!'
        assert config_path.exists(), 'Did not find _config.yml in the current directory!'
        assert pr_msg_path.exists(), 'Did not find _setup_pr_template.md in the current directory!'

        # replace content of README with template
        readme = readme_template_path.read_text().replace('{_username_}', username).replace('{_repo_name_}', repo_name)
        readme_path.write_text(readme)
        
        # update _config.yml
        cfg = config_path.read_text()
        cfg = re.sub(r'^(github_username: )(fastai)', r'\1{}'.format(username), cfg, flags=re.MULTILINE)
        cfg = re.sub(r'^(baseurl: )("")', r'\1"/{}"'.format(repo_name), cfg, flags=re.MULTILINE)
        cfg = re.sub(r'^(github_repo: ")(fastpages)', r'\1{}'.format(repo_name), cfg, flags=re.MULTILINE)
        cfg = re.sub(r'^(url: "https://)(fastpages.fast.ai)(")', r'\1{}.github.io\3'.format(username), cfg, flags=re.MULTILINE)
        config_path.write_text(cfg)

        # prepare the pr message
        pr = pr_msg_path.read_text().replace('{_username_}', username).replace('{_repo_name_}', repo_name)
        pr_msg_path.write_text(pr)
      shell: python

    - name: commit changes
      if: steps.gh.outputs.template_bool == 'true'
      run: |
        git config --global user.email "${GH_EMAIL}"
        git config --global user.name "${GH_USERNAME}"
        git checkout -B fastpages-automated-setup
        git rm README_TEMPLATE.md CONTRIBUTING.md CNAME action.yml _diagram.png
        git rm .github/workflows/chatops.yaml
        git add _config.yml README.md _setup_pr_template.md
        git commit -m'setup repo'
        git push -f --set-upstream origin fastpages-automated-setup
      env: 
        GH_EMAIL: ${{ github.event.commits[0].author.email }}
        GH_USERNAME: ${{ github.event.commits[0].author.username }}

    - name: Open a PR
      if: steps.gh.outputs.template_bool == 'true'
      uses: actions/github-script@0.5.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var fs = require('fs');
          var contents = fs.readFileSync('_setup_pr_template.md', 'utf8');
          github.pulls.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: 'Initial Setup',
                        head: 'fastpages-automated-setup',
                        base: 'master',
                        body: `${contents}`
                        })
